source.with.encoding('G:/00WORK/00Forschung/00Pub/Buch/Oekonometrie/OekoUB/Package/desk/R/print.desk.R', encoding='UTF-8', echo=TRUE)
print(X, details = T)
library(desk)
data.educwages <- read.dta("R:/educwages.dta")
Y = ivreg2(wages ~ union + education, endog = "education", iv = c("meducation", "feducation"), data = data.educwages)
Y = ivr(wages ~ union + education, endog = "education", iv = c("meducation", "feducation"), data = data.educwages)
Y
Y = ivr(wages ~ union + education, endog = "education", iv = c("meducation", "feducation"), data = data.educwages, details = T)
Y
source.with.encoding('~/.active-rstudio-document', encoding='UTF-8', echo=TRUE)
Y
source.with.encoding('G:/00WORK/00Forschung/00Pub/Buch/Oekonometrie/OekoUB/Package/desk/R/print.desk.R', encoding='UTF-8', echo=TRUE)
Y
source.with.encoding('~/.active-rstudio-document', encoding='UTF-8', echo=TRUE)
Y
source.with.encoding('G:/00WORK/00Forschung/00Pub/Buch/Oekonometrie/OekoUB/Package/desk/R/print.desk.R', encoding='UTF-8', echo=TRUE)
Y
source.with.encoding('G:/00WORK/00Forschung/00Pub/Buch/Oekonometrie/OekoUB/Package/desk/R/print.desk.R', encoding='UTF-8', echo=TRUE)
Y
library(desk)
Y = ivr(wages ~ union + education, endog = "education", iv = c("meducation", "feducation"), data = data.educwages)
data.educwages <- read.dta("R:/educwages.dta")
Y = ivr(wages ~ union + education, endog = "education", iv = c("meducation", "feducation"), data = data.educwages)
Y
ivr(contr ~ score, endog = "score", iv = "contrprev", data = data.insurance)
data.insurance
ivr(contr ~ score, iv = "contrprev", data = data.insurance)
ivr(contr ~ score, endog = "score", iv = "contrprev", data = data.insurance)
source('~/.active-rstudio-document', echo=TRUE)
ivr(contr ~ score, endog = "score", iv = "contrprev", data = data.insurance)
source('~/.active-rstudio-document', echo=TRUE)
ivr(contr ~ score, endog = "score", iv = "contrprev", data = data.insurance)
source('~/.active-rstudio-document', echo=TRUE)
ivr(contr ~ score, endog = "score", iv = "contrprev", data = data.insurance)
source('~/.active-rstudio-document', echo=TRUE)
ivr(contr ~ score, endog = "score", iv = "contrprev", data = data.insurance)
source('~/.active-rstudio-document', echo=TRUE)
ivr(contr ~ score, endog = "score", iv = "contrprev", data = data.insurance)
source('~/.active-rstudio-document', echo=TRUE)
ivr(contr ~ score, endog = "score", iv = "contrprev", data = data.insurance)
source('~/.active-rstudio-document', echo=TRUE)
ivr(contr ~ score, endog = "score", iv = "contrprev", data = data.insurance)
source('~/.active-rstudio-document', echo=TRUE)
ivr(contr ~ score, endog = "score", iv = "contrprev", data = data.insurance)
source('~/.active-rstudio-document', echo=TRUE)
ivr(contr ~ score, endog = "score", iv = "contrprev", data = data.insurance)
source('~/.active-rstudio-document', echo=TRUE)
ivr(contr ~ score, endog = "score", iv = "contrprev", data = data.insurance)
source('~/.active-rstudio-document', echo=TRUE)
ivr(contr ~ score, endog = "score", iv = "contrprev", data = data.insurance)
source('~/.active-rstudio-document', echo=TRUE)
ivr(contr ~ score, endog = "score", iv = "contrprev", data = data.insurance)
source('~/.active-rstudio-document', echo=TRUE)
ivr(contr ~ score, endog = "score", iv = "contrprev", data = data.insurance)
source('~/.active-rstudio-document', echo=TRUE)
ivr(contr ~ score, endog = "score", iv = "contrprev", data = data.insurance)
Y = ivr(wages ~ union + education, endog = "education", iv = c("meducation", "feducation"), data = data.educwages)
source('~/.active-rstudio-document', echo=TRUE)
Y = ivr(wages ~ union + education, endog = "education", iv = c("meducation", "feducation"), data = data.educwages)
Y
source('~/.active-rstudio-document', echo=TRUE)
Y = ivr(wages ~ union + education, endog = "education", iv = c("meducation", "feducation"), data = data.educwages)
source('~/.active-rstudio-document', echo=TRUE)
Y = ivr(wages ~ union + education, endog = "education", iv = c("meducation", "feducation"), data = data.educwages)
source('~/.active-rstudio-document', echo=TRUE)
Y = ivr(wages ~ union + education, endog = "education", iv = c("meducation", "feducation"), data = data.educwages)
source('~/.active-rstudio-document', echo=TRUE)
Y = ivr(wages ~ union + education, endog = "education", iv = c("meducation", "feducation"), data = data.educwages)
source('~/.active-rstudio-document', echo=TRUE)
Y = ivr(wages ~ union + education, endog = "education", iv = c("meducation", "feducation"), data = data.educwages)
?as.matrix
source('~/.active-rstudio-document', echo=TRUE)
?as.matrix
Y = ivr(wages ~ union + education, endog = "education", iv = c("meducation", "feducation"), data = data.educwages)
source('~/.active-rstudio-document', echo=TRUE)
Y = ivr(wages ~ union + education, endog = "education", iv = c("meducation", "feducation"), data = data.educwages)
source('~/.active-rstudio-document', echo=TRUE)
Y = ivr(wages ~ union + education, endog = "education", iv = c("meducation", "feducation"), data = data.educwages)
source('~/.active-rstudio-document', echo=TRUE)
Y = ivr(wages ~ union + education, endog = "education", iv = c("meducation", "feducation"), data = data.educwages)
source('~/.active-rstudio-document', echo=TRUE)
Y = ivr(wages ~ union + education, endog = "education", iv = c("meducation", "feducation"), data = data.educwages)
?tsls
library("sem", lib.loc="R:/R/App/R-Portable/library")
?tsls
head(data.kmenta)
library(desk)
head(data.kmenta)
head(Kmenta)
summary(tsls(consump ~ price + income, ~ income + farmPrice + trend, data = data.kmenta))
summary(tsls(Q ~ P + D, ~ D + F + A, data=Kmenta))     # demand equation
ivr(consump ~ price + income, endog = "income", iv = c("farmPrice", "trend"), data = data.kmenta))
ivr(consump ~ price + income, endog = "income", iv = c("farmPrice", "trend"), data = data.kmenta)
ivr(consump ~ price + income, endog = "income", iv = c("income", "farmPrice", "trend"), data = data.kmenta)
source.with.encoding('~/.active-rstudio-document', encoding='UTF-8', echo=TRUE)
ivr(consump ~ price + income, endog = "income", iv = c("income", "farmPrice", "trend"), data = data.kmenta)
ivr(consump ~ price + income, endog = "income", iv = c("farmPrice", "trend"), data = data.kmenta)
eqD <- consump ~ price + income
eqS <- consump ~ price + farmPrice + trend
ivr(mod = eqD, endog = "price", iv = c("farmPrice", "trend"), data = data.kmenta)
data( "Kmenta" )
eqDemand <- consump ~ price + income
eqSupply <- consump ~ price + farmPrice + trend
system
data( "Kmenta" )
eqDemand <- consump ~ price + income
eqSupply <- consump ~ price + farmPrice + trend
system <- list( demand = eqDemand, supply = eqSupply )
## 2SLS estimation
inst <- ~ income + farmPrice + trend
fit2sls <- systemfit( system, "2SLS", inst = inst, data = Kmenta )
print( fit2sls )
Kmenta
## 2SLS estimation
inst <- ~ income + farmPrice + trend
fit2sls <- systemfit( system, "2SLS", inst = inst, data = data.kmenta )
print( fit2sls )
eqD <- consump ~ price + income
eqS <- consump ~ price + farmPrice + trend
# Estimate demand function
D.est <- ivr(mod = eqD, endog = "price", iv = c("farmPrice", "trend"), data = data.kmenta)
D.est
# Estimate supply function
S.est <- ivr(mod = eqS, endog = "price", iv = c("farmPrice", "trend"), data = data.kmenta)
S.est
library(desk)
ivr(y ~ x1 + x2, endog = c("x1", "x2"), iv = c("z1", "z2"), data = data.tsls)
ivr(y ~ x1 + x2, endog = c("x1", "x2"), iv = c("z1", "z2"), data = data.tsls, details = T)
source('G:/00WORK/00Forschung/00Pub/Buch/Oekonometrie/OekoUB/Package/desk/00Krams/ivreg.R', echo=TRUE)
summary(ivreg(y ~ x1 + x2 | z1 + z2, data = data.tsls), diagnostics = T)
endog = c("x1", "x2")
seq_along(endog)
source('~/.active-rstudio-document', echo=TRUE)
ivr(y ~ x1 + x2, endog = c("x1", "x2"), iv = c("z1", "z2"), data = data.tsls, details = T)
source('~/.active-rstudio-document', echo=TRUE)
ivr(y ~ x1 + x2, endog = c("x1", "x2"), iv = c("z1", "z2"), data = data.tsls, details = T)
source('~/.active-rstudio-document', echo=TRUE)
ivr(y ~ x1 + x2, endog = c("x1", "x2"), iv = c("z1", "z2"), data = data.tsls, details = T)
source('~/.active-rstudio-document', echo=TRUE)
ivr(y ~ x1 + x2, endog = c("x1", "x2"), iv = c("z1", "z2"), data = data.tsls, details = T)
?save.dta
?write.dta(data.tsls, file = "R:/test.dta")
write.dta(data.tsls, file = "R:/test.dta")
??shea
library(foreign)
data.educwages <- read.dta("http://www.stata-press.com/data/r12/educwages.dta")
ivr(wages ~ union + education, endog = "education", iv = c("meducation", "feducation"), data = data.educwages)
data.educwages <- read.dta("R:/educwages.dta")
ivr(wages ~ union + education, endog = "education", iv = c("meducation", "feducation"), data = data.educwages)
ivr(wages ~ union + education, endog = "education", iv = c("meducation", "feducation"), data = data.educwages, details = T)
source('~/.active-rstudio-document', echo=TRUE)
ivr(wages ~ union + education, endog = "education", iv = c("meducation", "feducation"), data = data.educwages, details = T)
source('~/.active-rstudio-document', echo=TRUE)
ivr(wages ~ union + education, endog = "education", iv = c("meducation", "feducation"), data = data.educwages, details = T)
source('~/.active-rstudio-document', echo=TRUE)
ivr(wages ~ union + education, endog = "education", iv = c("meducation", "feducation"), data = data.educwages, details = T)
source('~/.active-rstudio-document', echo=TRUE)
ivr(wages ~ union + education, endog = "education", iv = c("meducation", "feducation"), data = data.educwages, details = T)
source('~/.active-rstudio-document', echo=TRUE)
ivr(wages ~ union + education, endog = "education", iv = c("meducation", "feducation"), data = data.educwages, details = T)
source('~/.active-rstudio-document', echo=TRUE)
ivr(wages ~ union + education, endog = "education", iv = c("meducation", "feducation"), data = data.educwages, details = T)
source('~/.active-rstudio-document', echo=TRUE)
ivr(wages ~ union + education, endog = "education", iv = c("meducation", "feducation"), data = data.educwages, details = T)
source('~/.active-rstudio-document', echo=TRUE)
ivr(wages ~ union + education, endog = "education", iv = c("meducation", "feducation"), data = data.educwages, details = T)
source('~/.active-rstudio-document', echo=TRUE)
ivr(wages ~ union + education, endog = "education", iv = c("meducation", "feducation"), data = data.educwages, details = T)
source('~/.active-rstudio-document', echo=TRUE)
ivr(wages ~ union + education, endog = "education", iv = c("meducation", "feducation"), data = data.educwages, details = T)
ivr(y ~ x1 + x2, endog = c("x1", "x2"), iv = c("z1", "z2"), data = data.tsls, details = T)
source('~/.active-rstudio-document', echo=TRUE)
ivr(wages ~ union + education, endog = "education", iv = c("meducation", "feducation"), data = data.educwages, details = T)
source('~/.active-rstudio-document', echo=TRUE)
ivr(wages ~ union + education, endog = "education", iv = c("meducation", "feducation"), data = data.educwages, details = T)
source('~/.active-rstudio-document', echo=TRUE)
ivr(wages ~ union + education, endog = "education", iv = c("meducation", "feducation"), data = data.educwages, details = T)
source('~/.active-rstudio-document', echo=TRUE)
ivr(wages ~ union + education, endog = "education", iv = c("meducation", "feducation"), data = data.educwages, details = T)
source('~/.active-rstudio-document', echo=TRUE)
ivr(wages ~ union + education, endog = "education", iv = c("meducation", "feducation"), data = data.educwages, details = T)
source('~/.active-rstudio-document', echo=TRUE)
ivr(wages ~ union + education, endog = "education", iv = c("meducation", "feducation"), data = data.educwages, details = T)
source('~/.active-rstudio-document', echo=TRUE)
ivr(wages ~ union + education, endog = "education", iv = c("meducation", "feducation"), data = data.educwages, details = T)
source('~/.active-rstudio-document', echo=TRUE)
ivr(wages ~ union + education, endog = "education", iv = c("meducation", "feducation"), data = data.educwages, details = T)
ivr(y ~ x1 + x2, endog = c("x1", "x2"), iv = c("z1", "z2"), data = data.tsls, details = T)
source('~/.active-rstudio-document', echo=TRUE)
ivr(y ~ x1 + x2, endog = c("x1", "x2"), iv = c("z1", "z2"), data = data.tsls, details = T)
source('~/.active-rstudio-document', echo=TRUE)
ivr(y ~ x1 + x2, endog = c("x1", "x2"), iv = c("z1", "z2"), data = data.tsls, details = T)
summary(ivreg(y ~ x1 + x2 | z1 + z2, data = data.tsls), diagnostics = T)
summary(ivreg(wages ~ union + education | union+meducation+feducation, data = data.educwages), diagnostics = T))
summary(ivreg(wages ~ union + education | union+meducation+feducation, data = data.educwages), diagnostics = T)
summary(ivreg(y ~ x1 + x2 | z1 + z2, data = data.tsls), diagnostics = T)
source('~/.active-rstudio-document', echo=TRUE)
ivr(y ~ x1 + x2, endog = c("x1", "x2"), iv = c("z1", "z2"), data = data.tsls, details = T)
source('~/.active-rstudio-document', echo=TRUE)
ivr(y ~ x1 + x2, endog = c("x1", "x2"), iv = c("z1", "z2"), data = data.tsls, details = T)
source('~/.active-rstudio-document', echo=TRUE)
summary(ivreg(y ~ x1 + x2 | z1 + z2, data = data.tsls), diagnostics = T)
source('~/.active-rstudio-document', echo=TRUE)
ivr(y ~ x1 + x2, endog = c("x1", "x2"), iv = c("z1", "z2"), data = data.tsls, details = T)
source('~/.active-rstudio-document', echo=TRUE)
ivr(y ~ x1 + x2, endog = c("x1", "x2"), iv = c("z1", "z2"), data = data.tsls, details = T)
source('~/.active-rstudio-document', echo=TRUE)
ivr(y ~ x1 + x2, endog = c("x1", "x2"), iv = c("z1", "z2"), data = data.tsls, details = T)
source('~/.active-rstudio-document', echo=TRUE)
ivr(y ~ x1 + x2, endog = c("x1", "x2"), iv = c("z1", "z2"), data = data.tsls, details = T)
source('~/.active-rstudio-document', echo=TRUE)
ivr(y ~ x1 + x2, endog = c("x1", "x2"), iv = c("z1", "z2"), data = data.tsls, details = T)
source('~/.active-rstudio-document', echo=TRUE)
ivr(y ~ x1 + x2, endog = c("x1", "x2"), iv = c("z1", "z2"), data = data.tsls, details = T)
source('~/.active-rstudio-document', echo=TRUE)
ivr(y ~ x1 + x2, endog = c("x1", "x2"), iv = c("z1", "z2"), data = data.tsls, details = T)
source('G:/00WORK/00Forschung/00Pub/Buch/Oekonometrie/OekoUB/Package/desk/R/ivr.R', echo=TRUE)
ivr(y ~ x1 + x2, endog = c("x1", "x2"), iv = c("z1", "z2"), data = data.tsls, details = T)
source('~/.active-rstudio-document', echo=TRUE)
ivr(y ~ x1 + x2, endog = c("x1", "x2"), iv = c("z1", "z2"), data = data.tsls, details = T)
ivr(wages ~ union + education, endog = "education", iv = c("meducation", "feducation"), data = data.educwages, details = T)
source.with.encoding('~/.active-rstudio-document', encoding='UTF-8', echo=TRUE)
ivr(wages ~ union + education, endog = "education", iv = c("meducation", "feducation"), data = data.educwages, details = T)
source.with.encoding('~/.active-rstudio-document', encoding='UTF-8', echo=TRUE)
ivr(wages ~ union + education, endog = "education", iv = c("meducation", "feducation"), data = data.educwages, details = T)
source.with.encoding('~/.active-rstudio-document', encoding='UTF-8', echo=TRUE)
ivr(wages ~ union + education, endog = "education", iv = c("meducation", "feducation"), data = data.educwages, details = T)
source.with.encoding('~/.active-rstudio-document', encoding='UTF-8', echo=TRUE)
ivr(wages ~ union + education, endog = "education", iv = c("meducation", "feducation"), data = data.educwages, details = T)
ivr(y ~ x1 + x2, endog = c("x1", "x2"), iv = c("z1", "z2"), data = data.tsls, details = T)
source.with.encoding('G:/00WORK/00Forschung/00Pub/Buch/Oekonometrie/OekoUB/Package/desk/R/print.desk.R', encoding='UTF-8', echo=TRUE)
ivr(y ~ x1 + x2, endog = c("x1", "x2"), iv = c("z1", "z2"), data = data.tsls, details = T)
source.with.encoding('G:/00WORK/00Forschung/00Pub/Buch/Oekonometrie/OekoUB/Package/desk/R/ivr.R', encoding='UTF-8', echo=TRUE)
ivr(y ~ x1 + x2, endog = c("x1", "x2"), iv = c("z1", "z2"), data = data.tsls, details = T)
ivr(wages ~ union + education, endog = "education", iv = c("meducation", "feducation"), data = data.educwages, details = T)
source.with.encoding('~/.active-rstudio-document', encoding='UTF-8', echo=TRUE)
ivr(y ~ x1 + x2, endog = c("x1", "x2"), iv = c("z1", "z2"), data = data.tsls, details = T)
source.with.encoding('G:/00WORK/00Forschung/00Pub/Buch/Oekonometrie/OekoUB/Package/desk/R/ivr.R', encoding='UTF-8', echo=TRUE)
ivr(y ~ x1 + x2, endog = c("x1", "x2"), iv = c("z1", "z2"), data = data.tsls, details = T)
source.with.encoding('G:/00WORK/00Forschung/00Pub/Buch/Oekonometrie/OekoUB/Package/desk/R/ivr.R', encoding='UTF-8', echo=TRUE)
source.with.encoding('~/.active-rstudio-document', encoding='UTF-8', echo=TRUE)
ivr(y ~ x1 + x2, endog = c("x1", "x2"), iv = c("z1", "z2"), data = data.tsls, details = T)
source.with.encoding('G:/00WORK/00Forschung/00Pub/Buch/Oekonometrie/OekoUB/Package/desk/R/ivr.R', encoding='UTF-8', echo=TRUE)
ivr(y ~ x1 + x2, endog = c("x1", "x2"), iv = c("z1", "z2"), data = data.tsls, details = T)
source.with.encoding('~/.active-rstudio-document', encoding='UTF-8', echo=TRUE)
ivr(y ~ x1 + x2, endog = c("x1", "x2"), iv = c("z1", "z2"), data = data.tsls, details = T)
source.with.encoding('G:/00WORK/00Forschung/00Pub/Buch/Oekonometrie/OekoUB/Package/desk/R/ivr.R', encoding='UTF-8', echo=TRUE)
ivr(y ~ x1 + x2, endog = c("x1", "x2"), iv = c("z1", "z2"), data = data.tsls, details = T)
source.with.encoding('G:/00WORK/00Forschung/00Pub/Buch/Oekonometrie/OekoUB/Package/desk/R/ivr.R', encoding='UTF-8', echo=TRUE)
source.with.encoding('~/.active-rstudio-document', encoding='UTF-8', echo=TRUE)
ivr(y ~ x1 + x2, endog = c("x1", "x2"), iv = c("z1", "z2"), data = data.tsls, details = T)
source.with.encoding('G:/00WORK/00Forschung/00Pub/Buch/Oekonometrie/OekoUB/Package/desk/R/ivr.R', encoding='UTF-8', echo=TRUE)
ivr(y ~ x1 + x2, endog = c("x1", "x2"), iv = c("z1", "z2"), data = data.tsls, details = T)
source.with.encoding('G:/00WORK/00Forschung/00Pub/Buch/Oekonometrie/OekoUB/Package/desk/R/ivr.R', encoding='UTF-8', echo=TRUE)
ivr(y ~ x1 + x2, endog = c("x1", "x2"), iv = c("z1", "z2"), data = data.tsls, details = T)
source.with.encoding('~/.active-rstudio-document', encoding='UTF-8', echo=TRUE)
ivr(y ~ x1 + x2, endog = c("x1", "x2"), iv = c("z1", "z2"), data = data.tsls, details = T)
source.with.encoding('~/.active-rstudio-document', encoding='UTF-8', echo=TRUE)
ivr(y ~ x1 + x2, endog = c("x1", "x2"), iv = c("z1", "z2"), data = data.tsls, details = T)
source.with.encoding('~/.active-rstudio-document', encoding='UTF-8', echo=TRUE)
ivr(y ~ x1 + x2, endog = c("x1", "x2"), iv = c("z1", "z2"), data = data.tsls, details = T)
source.with.encoding('~/.active-rstudio-document', encoding='UTF-8', echo=TRUE)
ivr(y ~ x1 + x2, endog = c("x1", "x2"), iv = c("z1", "z2"), data = data.tsls, details = T)
source.with.encoding('G:/00WORK/00Forschung/00Pub/Buch/Oekonometrie/OekoUB/Package/desk/R/ivr.R', encoding='UTF-8', echo=TRUE)
ivr(y ~ x1 + x2, endog = c("x1", "x2"), iv = c("z1", "z2"), data = data.tsls, details = T)
source.with.encoding('G:/00WORK/00Forschung/00Pub/Buch/Oekonometrie/OekoUB/Package/desk/R/ivr.R', encoding='UTF-8', echo=TRUE)
ivr(y ~ x1 + x2, endog = c("x1", "x2"), iv = c("z1", "z2"), data = data.tsls, details = T)
source.with.encoding('G:/00WORK/00Forschung/00Pub/Buch/Oekonometrie/OekoUB/Package/desk/R/ivr.R', encoding='UTF-8', echo=TRUE)
ivr(y ~ x1 + x2, endog = c("x1", "x2"), iv = c("z1", "z2"), data = data.tsls, details = T)
source.with.encoding('~/.active-rstudio-document', encoding='UTF-8', echo=TRUE)
ivr(y ~ x1 + x2, endog = c("x1", "x2"), iv = c("z1", "z2"), data = data.tsls, details = T)
source.with.encoding('G:/00WORK/00Forschung/00Pub/Buch/Oekonometrie/OekoUB/Package/desk/R/ivr.R', encoding='UTF-8', echo=TRUE)
ivr(y ~ x1 + x2, endog = c("x1", "x2"), iv = c("z1", "z2"), data = data.tsls, details = T)
source.with.encoding('G:/00WORK/00Forschung/00Pub/Buch/Oekonometrie/OekoUB/Package/desk/R/ivr.R', encoding='UTF-8', echo=TRUE)
ivr(y ~ x1 + x2, endog = c("x1", "x2"), iv = c("z1", "z2"), data = data.tsls, details = T)
source.with.encoding('~/.active-rstudio-document', encoding='UTF-8', echo=TRUE)
ivr(y ~ x1 + x2, endog = c("x1", "x2"), iv = c("z1", "z2"), data = data.tsls, details = T)
source.with.encoding('~/.active-rstudio-document', encoding='UTF-8', echo=TRUE)
source.with.encoding('G:/00WORK/00Forschung/00Pub/Buch/Oekonometrie/OekoUB/Package/desk/R/ivr.R', encoding='UTF-8', echo=TRUE)
ivr(y ~ x1 + x2, endog = c("x1", "x2"), iv = c("z1", "z2"), data = data.tsls, details = T)
source.with.encoding('G:/00WORK/00Forschung/00Pub/Buch/Oekonometrie/OekoUB/Package/desk/R/ivr.R', encoding='UTF-8', echo=TRUE)
ivr(y ~ x1 + x2, endog = c("x1", "x2"), iv = c("z1", "z2"), data = data.tsls, details = T)
source.with.encoding('~/.active-rstudio-document', encoding='UTF-8', echo=TRUE)
ivr(y ~ x1 + x2, endog = c("x1", "x2"), iv = c("z1", "z2"), data = data.tsls, details = T)
if(dim(mf)[2] > 2){
x1 = as.matrix(X[,endog[i]])
X2 = as.matrix(X[, - which(colnames(X) %in% endog[i] )])
Z1 = as.matrix(cbind(X2, iv.data))
#print(length(endog))
y.ber = lm.fit(X2,x1)$resid
y.fit = lm.fit(Z1, x1)$fitted
X.fit = lm.fit(Z1, X2)$fitted
X.ber = lm.fit(X.fit, y.fit)$resid
#print(y.ber)
#print(X.ber)
#print(Z1)
print(cor(y.ber,X.ber)^2)
R.est = lm.fit(X.ber, y.ber)
fst[i, 3] = Sxy(R.est$fitted)/Sxy(y.ber)
} else {
# Calculate regular R^2 of first stage regression
y.hat = aux.reg$fitted[,2]
y.obs = y.hat + aux.reg$resid[,2]
fst[i, 3] = Sxy(y.hat)/Sxy(y.obs)
}
source.with.encoding('~/.active-rstudio-document', encoding='UTF-8', echo=TRUE)
ivr(y ~ x1 + x2, endog = c("x1", "x2"), iv = c("z1", "z2"), data = data.tsls, details = T)
library(desk)
ivr(y ~ x1 + x2, endog = c("x1", "x2"), iv = c("z1", "z2"), data = data.tsls, details = T)
library(desk)
x <− c(3,3,3,3,3)
y <− c(1,3,2,4,1)
plot(x,y)
?ols.redict
?ols.predict
y = c(4,1,2,1)
x1 = c(4,1,3,2)
x2 = c(3,4,4,2)
my.mod = ols(y~x1+x2)
ols.predict(my.mod) # returns fitted values
my.mat = rbind(c(x1=6, x2=5), c(x1=3, x2=3), c(x1=9, x2=10))
ols.predict(my.mod, xnew = my.mat) # returns predicted values
?ols.interval
y = c(4,1,2,1)
x1 = c(4,1,3,2)
x2 = c(3,4,4,2)
modA.est = ols(y~x1+x2)
modB.est = ols(y~0+x1+x2)
my.mat = cbind(x1 = c(6,3,9), x2 = c(5,3,10))
ols.interval(modA.est) # 95% confidence intervals for all parameters
ols.interval(modA.est, which.coef = c("(Intercept)", "x2")) # 95% confidence intervals for intercept and beta2
ols.interval(modA.est, which.coef = c(1,3)) # equivalent to previous command
ols.interval(modA.est, xnew = my.mat) # 95% confidence intervals for true, constant y-values
ols.interval(modA.est, type = "acceptance", which.coef = c(2,3), q = 0.5) # ai for H0:beta1 = 0.5 and H0:beta2 = 0.5
ols.interval(modA.est, type = "prediction", xnew = c(x1=6, x2=5))
ols.predict(my.mod) # returns fitted values
my.mat = rbind(c(x1=6, x2=5), c(x1=3, x2=3), c(x1=9, x2=10))
ols.predict(my.mod, xnew = my.mat) # returns predicted values
my.mat
ols.interval(modA.est, type = "prediction", xnew = c(x1=6, x2=5), details = T)
source.with.encoding('~/.active-rstudio-document', encoding='UTF-8', echo=TRUE)
ols.predict(my.mod) # returns fitted values
my.mat = rbind(c(x1=6, x2=5), c(x1=3, x2=3), c(x1=9, x2=10))
ols.predict(my.mod, xnew = my.mat) # returns predicted values
source.with.encoding('~/.active-rstudio-document', encoding='UTF-8', echo=TRUE)
source.with.encoding('G:/00WORK/00Forschung/00Pub/Buch/Oekonometrie/OekoUB/Package/desk/R/print.desk.R', encoding='UTF-8', echo=TRUE)
ols.predict(my.mod) # returns fitted values
my.mat = rbind(c(x1=6, x2=5), c(x1=3, x2=3), c(x1=9, x2=10))
ols.predict(my.mod, xnew = my.mat) # returns predicted values
source.with.encoding('~/.active-rstudio-document', encoding='UTF-8', echo=TRUE)
ols.predict(my.mod, xnew = my.mat) # returns predicted values
source.with.encoding('G:/00WORK/00Forschung/00Pub/Buch/Oekonometrie/OekoUB/Package/desk/R/ols.predict.R', encoding='UTF-8', echo=TRUE)
source.with.encoding('~/.active-rstudio-document', encoding='UTF-8', echo=TRUE)
ols.predict(my.mod, xnew = my.mat) # returns predicted values
source.with.encoding('~/.active-rstudio-document', encoding='UTF-8', echo=TRUE)
ols.predict(my.mod, xnew = my.mat) # returns predicted values
y = c(4,1,2,1)
x1 = c(4,1,3,2)
x2 = c(3,4,4,2)
my.mod = ols(y~x1+x2)
ols.predict(my.mod) # returns fitted values
my.mat = rbind(c(x1=6, x2=5), c(x1=3, x2=3), c(x1=9, x2=10))
ols.predict(my.mod, xnew = my.mat) # returns predicted values
ols.predict(my.mod, xnew = my.mat, details = T) # returns predicted v
source.with.encoding('~/.active-rstudio-document', encoding='UTF-8', echo=TRUE)
y = c(4,1,2,1)
x1 = c(4,1,3,2)
x2 = c(3,4,4,2)
my.mod = ols(y~x1+x2)
ols.predict(my.mod) # returns fitted values
my.mat = rbind(c(x1=6, x2=5), c(x1=3, x2=3), c(x1=9, x2=10))
ols.predict(my.mod, xnew = my.mat) # returns predicted values
ols.predict(my.mod, xnew = my.mat, details = T) # returns predicted v
source.with.encoding('~/.active-rstudio-document', encoding='UTF-8', echo=TRUE)
ols.predict(my.mod, xnew = my.mat) # returns predicted values
ols.predict(my.mod, xnew = my.mat, details = T)
source.with.encoding('~/.active-rstudio-document', encoding='UTF-8', echo=TRUE)
ols.predict(my.mod, xnew = my.mat, details = T)
?dimnames
source.with.encoding('~/.active-rstudio-document', encoding='UTF-8', echo=TRUE)
ols.predict(my.mod, xnew = my.mat, details = T)
source.with.encoding('G:/00WORK/00Forschung/00Pub/Buch/Oekonometrie/OekoUB/Package/desk/R/print.desk.R', encoding='UTF-8', echo=TRUE)
ols.predict(my.mod, xnew = my.mat, details = T)
source.with.encoding('G:/00WORK/00Forschung/00Pub/Buch/Oekonometrie/OekoUB/Package/desk/R/print.desk.R', encoding='UTF-8', echo=TRUE)
ols.predict(my.mod, xnew = my.mat, details = T)
source.with.encoding('~/.active-rstudio-document', encoding='UTF-8', echo=TRUE)
ols.predict(my.mod, xnew = my.mat, details = T)
source.with.encoding('G:/00WORK/00Forschung/00Pub/Buch/Oekonometrie/OekoUB/Package/desk/R/print.desk.R', encoding='UTF-8', echo=TRUE)
ols.predict(my.mod, xnew = my.mat, details = T)
source.with.encoding('~/.active-rstudio-document', encoding='UTF-8', echo=TRUE)
ols.predict(my.mod, xnew = my.mat, details = T)
source.with.encoding('G:/00WORK/00Forschung/00Pub/Buch/Oekonometrie/OekoUB/Package/desk/R/print.desk.R', encoding='UTF-8', echo=TRUE)
ols.predict(my.mod, xnew = my.mat, details = T)
source.with.encoding('G:/00WORK/00Forschung/00Pub/Buch/Oekonometrie/OekoUB/Package/desk/R/ols.predict.R', encoding='UTF-8', echo=TRUE)
ols.predict(my.mod, xnew = my.mat, details = T)
y = c(4,1,2,1)
x1 = c(4,1,3,2)
x2 = c(3,4,4,2)
my.mod = ols(y~x1+x2)
ols.predict(my.mod) # returns fitted values
my.mat = rbind(c(x1=6, x2=5), c(x1=3, x2=3), c(x1=9, x2=10))
ols.predict(my.mod, xnew = my.mat) # returns predicted values
ols.predict(my.mod, xnew = my.mat, details = T) # returns predi
x <− c(3, 5, 7, 4, 2)
y <− c(4, 1, 3, 2, 7)
MeinModell.est <− ols(y ~ x)
MeinTest <− t.test.coef(MeinModell.est, nh = c(1,10))
ols.interval(MeinModell.est, type = "acceptance", which.coef = 2,
q = -2, dir = "right", sig.level = 0.1)
source.with.encoding('~/.active-rstudio-document', encoding='UTF-8', echo=TRUE)
?ols.interval
y = c(4,1,2,1)
x1 = c(4,1,3,2)
x2 = c(3,4,4,2)
modA.est = ols(y~x1+x2)
modB.est = ols(y~0+x1+x2)
my.mat = cbind(x1 = c(6,3,9), x2 = c(5,3,10))
ols.interval(modA.est) # 95% confidence intervals for all parameters
source.with.encoding('~/.active-rstudio-document', encoding='UTF-8', echo=TRUE)
y = c(4,1,2,1)
x1 = c(4,1,3,2)
x2 = c(3,4,4,2)
modA.est = ols(y~x1+x2)
modB.est = ols(y~0+x1+x2)
my.mat = cbind(x1 = c(6,3,9), x2 = c(5,3,10))
ols.interval(modA.est) # 95% confidence intervals for all parameters
ols.interval(modA.est)
source.with.encoding('~/.active-rstudio-document', encoding='UTF-8', echo=TRUE)
source.with.encoding('G:/00WORK/00Forschung/00Pub/Buch/Oekonometrie/OekoUB/Package/desk/R/ols.interval.R', encoding='UTF-8', echo=TRUE)
ols.interval(modA.est)
source.with.encoding('~/.active-rstudio-document', encoding='UTF-8', echo=TRUE)
ols.interval(modA.est)
source.with.encoding('~/.active-rstudio-document', encoding='UTF-8', echo=TRUE)
ols.interval(modA.est, which.coef = c("(Intercept)", "x2"))
ols.interval(modA.est, which.coef = c(1,3))
ols.interval(modA.est, xnew = my.mat)
ols.interval(modA.est, type = "acceptance", which.coef = c(2,3), q = 0.5)
ols.interval(modA.est, type = "prediction", xnew = c(x1=6, x2=5))
ols.interval(modA.est, type = "prediction", xnew = my.mat)
ols.interval(modB.est, type = "prediction", xnew = my.mat)
t.test.coef(MeinModell.est, nh = c(1,10))
MeinTest <− t.test.coef(MeinModell.est, nh = c(1,10))
ols.interval(MeinModell.est, type = "acceptance", which.coef = 2,
q = −2, dir = "right", sig.level = 0.1)
source.with.encoding('G:/00WORK/00Forschung/00Pub/Buch/Oekonometrie/OekoUB/Package/desk/R/ols.interval.R', encoding='UTF-8', echo=TRUE)
ols.interval(MeinModell.est, type = "acceptance", which.coef = 2,
q = −2, dir = "right", sig.level = 0.1)
source.with.encoding('~/.active-rstudio-document', encoding='UTF-8', echo=TRUE)
ols.interval(MeinModell.est, type = "acceptance", which.coef = 2,
q = −2, dir = "right", sig.level = 0.1)
source.with.encoding('~/.active-rstudio-document', encoding='UTF-8', echo=TRUE)
ols.interval(MeinModell.est, type = "acceptance", which.coef = 2,
q = −2, dir = "right", sig.level = 0.1)
ols.interval(MeinModell.est, type = "acceptance", which.coef = 2,
q = −2, sig.level = 0.1)
source.with.encoding('~/.active-rstudio-document', encoding='UTF-8', echo=TRUE)
ols.interval(MeinModell.est, type = "acceptance", which.coef = 2,
q = −2, sig.level = 0.1)
ols.interval(MeinModell.est, type = "acceptance", which.coef = 2,
q = −2, dir = "right", sig.level = 0.1)
ols.interval(MeinModell.est, type = "acceptance", which.coef = 2,
q = −2, dir = "left", sig.level = 0.1)
ols.interval(MeinModell.est, type = "acceptance", which.coef = 2,
q = −2, dir = "left", sig.level = 0.1, details = T)
ols.interval(modA.est, type = "acceptance", which.coef = 2, dir = "right", q = 0.5) # ai for H0:beta1 <= 0.5
y = c(4,1,2,1)
x1 = c(4,1,3,2)
x2 = c(3,4,4,2)
modA.est = ols(y~x1+x2)
modB.est = ols(y~0+x1+x2)
my.mat = cbind(x1 = c(6,3,9), x2 = c(5,3,10))
ols.interval(modA.est) # 95% confidence intervals for all parameters
ols.interval(modA.est, which.coef = c("(Intercept)", "x2")) # 95% confidence intervals for intercept and beta2
ols.interval(modA.est, which.coef = c(1,3)) # equivalent to previous command
ols.interval(modA.est, xnew = my.mat) # 95% confidence intervals around true, constant y-values
ols.interval(modA.est, type = "acceptance", which.coef = c(2,3), q = 0.5) # ai for H0:beta1 = 0.5 and H0:beta2 = 0.5
ols.interval(modA.est, type = "acceptance", which.coef = 2, dir = "right", q = 0.5) # ai for H0:beta1 <= 0.5
ols.interval(modA.est, type = "prediction", xnew = c(x1=6, x2=5))
ols.interval(modA.est, type = "prediction", xnew = my.mat) # Three prediction intervals
ols.interval(modB.est, type = "prediction", xnew = my.mat) # Model has no intercept
library(desk)
TestEinseitig <- t.test.coef(MeinModell.est, nh = c(0,1),
q = -2, dir = "right", sig.level = 0.1)
plot(TestEinseitig)
TestEinseitig
?legend
source.with.encoding('G:/00WORK/00Forschung/00Pub/Buch/Oekonometrie/OekoUB/Package/desk/R/plot.desk.R', encoding='UTF-8', echo=TRUE)
plot(TestEinseitig, legpos = "topleft")
source.with.encoding('~/.active-rstudio-document', encoding='UTF-8', echo=TRUE)
plot(TestEinseitig, legpos = "topleft")
source.with.encoding('G:/00WORK/00Forschung/00Pub/Buch/Oekonometrie/OekoUB/Package/desk/R/plot.desk.R', encoding='UTF-8', echo=TRUE)
plot(TestEinseitig, legpos = "topleft")
library(desk)
source.with.encoding('~/.active-rstudio-document', encoding='UTF-8', echo=TRUE)
plot(TestEinseitig)
source.with.encoding('~/.active-rstudio-document', encoding='UTF-8', echo=TRUE)
plot(TestEinseitig)
source.with.encoding('~/.active-rstudio-document', encoding='UTF-8', echo=TRUE)
plot(TestEinseitig)
source.with.encoding('~/.active-rstudio-document', encoding='UTF-8', echo=TRUE)
plot(TestEinseitig)
library(desk)
TestEinseitig
names(TestEinseitig)
TestEinseitig$results
TestEinseitig$results$crit.value
TestEinseitig$results$t.value
?rep
?replicate
?par
library(desk)
source.with.encoding('G:/00WORK/00Forschung/00Pub/Buch/Oekonometrie/OekoUB/Package/desk/R/print.desk.R', encoding='UTF-8', echo=TRUE)
