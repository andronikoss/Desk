\name{ols.interval}

\alias{ols.interval}

\title{Calculate different types of intervals in a linear model.}

\description{Calculates different types of intervals in a linear model.}

\usage{ols.interval(mod, data = list(), type = c("confidence", "prediction", "acceptance"),
  which.coef = "all", sig.level = 0.05, q = 0, dir = c("both", "left", "right"), xnew, details = FALSE)}

\arguments{
  \item{mod}{Linear model object generated by ols()}

  \item{data}{Name of dataframe to be specified if \code{mod} is a formula.}

  \item{type}{String value indicating the type of interval to be calculated. Default is "confidence".}

  \item{which.coef}{Strings of variable name(s) or vector of indices indicating the
    coefficients in the linear model for which confidence or acceptance intervals should be
    calculated. By default all coefficients are selected. Ignored for prediction intervals.}

  \item{sig.level}{Significance level}

  \item{q}{Value against which null hypothesis is tested. Only to be specified if type = "acceptance".}

  \item{dir}{Direction of the alternative hypothesis underlying the acceptance intervals. One sided confidence- and prediction
    intervals are not (yet) supported.}

  \item{xnew}{(T x K) matrix of new values of the exogenous variables, at which interval should be calculated, where
    \code{T} is the number of exogenous data points at which intervals should be calculated
    \code{K} is the number of exogenous variables in the model
    If type = "prediction" then prediction intervals are calculated at xnew, if type = "confidence" then confidence
    intervals around the unknown true y-values are calculated at xnew (a.k.a. confidence band). Ignored if type = "acceptance".
    In multiple regression models variable names must be specified.}

  \item{details}{Logical value indicating whether details should be printed out.}
}

\value{List object including interval borders (lower and upper) and center of interval (if dir = "both"), the standard error and the t.value}

\examples{
  y = c(4,1,2,1)
  x1 = c(4,1,3,2)
  x2 = c(3,4,4,2)
  modA.est = ols(y ~ x1 + x2)
  modB.est = ols(y ~ 0 + x1 + x2)
  my.mat = cbind(x1 = c(6,3,9), x2 = c(5,3,10))
  ols.interval(modA.est) # 95% confidence intervals for all parameters
  ols.interval(y ~ x1 + x2) # Similar to the above
  ols.interval(modA.est, which.coef = c("(Intercept)", "x2")) # 95% confidence intervals for intercept and beta2
  ols.interval(modA.est, which.coef = c(1,3)) # equivalent to previous command
  ols.interval(modA.est, xnew = my.mat) # 95% confidence intervals around true, constant y-values
  ols.interval(modA.est, type = "acceptance", which.coef = c(2,3), q = 0.5) # ai for H0:beta1 = 0.5 and H0:beta2 = 0.5
  ols.interval(modA.est, type = "acceptance", which.coef = 2, dir = "right", q = 0.5) # ai for H0:beta1 <= 0.5
  ols.interval(modA.est, type = "prediction", xnew = c(x1 = 6, x2 = 5))
  ols.interval(modA.est, type = "prediction", xnew = my.mat) # Three prediction intervals
  ols.interval(modB.est, type = "prediction", xnew = my.mat) # Model has no intercept
  }
\author{S. Hoffmann}
\keyword{Confidence interval, acceptance interval, prediction interval, linear model}